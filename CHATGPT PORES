import cv2
import os
import numpy as np

def analyze_pores(image_path):
    # Read image in grayscale
    img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    if img is None:
        print(f"Error loading image: {image_path}")
        return None

    # Apply binary threshold
    _, binary = cv2.threshold(img, 10, 255, cv2.THRESH_BINARY)

    # Calculate pore percentage (black pixels are 0 in binary image)
    total_pixels = binary.size
    black_pixels = np.sum(binary == 0)
    pore_percentage = (black_pixels / total_pixels) * 100

    return pore_percentage

def main():
    base_path = "/content/"
    results = []

    for i in range(1, 26):
        image_file = os.path.join(base_path, f"{i}.png")
        pore_percentage = analyze_pores(image_file)
        if pore_percentage is not None:
            results.append((i, pore_percentage))

    # Display the results
    print("Pore Analysis Results:")
    for img_num, pore_pct in results:
        print(f"Image {img_num}: Pore % = {pore_pct:.2f}%")

if __name__ == "__main__":
    main()
