import cv2
import numpy as np
import os
from openpyxl import Workbook  # Excel dosyası oluşturmak için

# Yuvarlaklık ve katılık hesaplama fonksiyonları
def calculate_circularity(area, perimeter):
    if perimeter == 0:
        return 0
    return 4 * np.pi * (area / (perimeter ** 2))

def calculate_solidity(area, hull_area):
    if hull_area == 0:
        return 0
    return area / hull_area

# Görüntü işleme ve analiz
results = []

# Dosya adları "1.png" ile "25.png" arasında
for i in range(1, 26):
    filename = f"{i}.png"
    filepath = filename  # Dosyalar mevcut dizinde varsayılıyor

    image = cv2.imread(filepath, cv2.IMREAD_GRAYSCALE)

    if image is None:
        print(f"Dosya açılamadı: {filename}")
        continue

    # Siyah piksel yüzdesi hesaplama
    _, binary = cv2.threshold(image, 10, 255, cv2.THRESH_BINARY)
    black_pixel_percentage = (np.sum(binary == 0) / binary.size) * 100

    # Sonuçları kaydet
    results.append({
        "filename": filename,
        "black_pixel_percentage": black_pixel_percentage,
    })

# Sonuçları yazdır
for result in results:
    print(f"Görsel: {result['filename']}")
    print(f"Siyah Piksel Yüzdesi: {result['black_pixel_percentage']:.2f}%")
    print("-" * 40)

# Excel dosyasına yazma
workbook = Workbook()
sheet = workbook.active
sheet.title = "Sonuçlar"

# Başlıklar
headers = ["Dosya Adı", "Siyah Piksel Yüzdesi"]
sheet.append(headers)

# Veriler
for result in results:
    sheet.append([result["filename"], result["black_pixel_percentage"]])

# Excel dosyasını kaydet
excel_file_name = "siyah_piksel_sonuclari.xlsx"
workbook.save(excel_file_name)

print(f"Sonuçlar {excel_file_name} dosyasına kaydedildi.")
